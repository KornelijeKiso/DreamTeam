<UserControl x:Class="ProjectTourism.View.GuideView.TourView.TourStopsUserControl"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ProjectTourism.View.GuideView.TourView"
        xmlns:conv="clr-namespace:ProjectTourism.Converters"
        xmlns:ns="clr-namespace:ProjectTourism.Localization"
        xmlns:c="clr-namespace:ProjectTourism.Converters"
        mc:Ignorable="d" d:DesignHeight="720" d:DesignWidth="1280">
    <UserControl.Resources>
        <ResourceDictionary>
            <c:ThemeToForegroundConverter x:Key="ThemeToForegroundConverter" />
            <conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Button x:Name="ReviewsButton" Visibility="{Binding Path=TourAppointment.IsReviewVisible, Converter={conv:BoolToVisibilityConverter}}" Content="{ns:Loc SeeReviews}" HorizontalAlignment="Left" Height="46" Margin="1050,460,0,0" VerticalAlignment="Top" Width="130" Click="ReviewsButton_Click">
            <Button.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="10"/>
                </Style>
            </Button.Resources>
        </Button>
        <Button x:Name="StopPassedButton" IsEnabled="{Binding TourAppointment.IsNotFinished}" Content="{ns:Loc StartTour}" HorizontalAlignment="Left" Height="48" Margin="1050,530,0,0" VerticalAlignment="Top" Width="130" Click="CheckpointPassedButton_Click">
            <Button.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="10"/>
                </Style>
            </Button.Resources>
        </Button>
        <Button IsCancel="True" x:Name="EmergencyStopButton" IsEnabled="{Binding TourAppointment.IsNotFinished}" Content="{ns:Loc EmergencyStop}" HorizontalAlignment="Left" Height="46" Margin="1050,600,0,0" VerticalAlignment="Top" Width="130" Background="#FFEF4343" Click="EmergencyStopButton_Click">
            <Button.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="10"/>
                </Style>
            </Button.Resources>
        </Button>

        <Label x:Name="TourNameLabel" Foreground="{Binding Path=Guide.DarkTheme, Converter={StaticResource ThemeToForegroundConverter}}" Content="{Binding Path=TourAppointment.Tour.Name}" HorizontalAlignment="Left" Height="78" Margin="90,35,0,0" VerticalAlignment="Top" Width="283" FontSize="40"/>
        <Label Name="CurrentTourStopLabel" Foreground="{Binding Path=Guide.DarkTheme, Converter={StaticResource ThemeToForegroundConverter}}" Content="{ns:Loc CurrentTourStop}" HorizontalAlignment="Left" Margin="100,160,0,0" VerticalAlignment="Top" FontSize="22"/>
        <Label Name="TourStateLabel" Foreground="{Binding Path=Guide.DarkTheme, Converter={StaticResource ThemeToForegroundConverter}}" Content="{ns:Loc TourState}" HorizontalAlignment="Left" Margin="980,160,0,0" VerticalAlignment="Top" FontSize="22"/>

        <TextBox x:Name="StopTextBox" HorizontalAlignment="Left" Height="42" Margin="100,213,0,0" TextWrapping="Wrap" Text="{Binding Path=TourAppointment.CurrentTourStop}" VerticalAlignment="Top" Width="348" FontSize="14" TextChanged="TextBox_TextChanged" IsReadOnly="True"/>
        <TextBox x:Name="TourStatusTextBox" HorizontalAlignment="Left" Height="42" Margin="980,213,0,0" TextWrapping="Wrap" Text="{Binding Path=TourAppointment.State}" VerticalAlignment="Top" Width="200" TextChanged="TextBox_TextChanged" FontSize="13" IsReadOnly="True"/>

        <DataGrid x:Name="Grid1" CanUserAddRows="False" HorizontalAlignment="Left" Height="346" VerticalAlignment="Top" Width="348" 
                  SelectedItem="{Binding SelectedTicket, UpdateSourceTrigger=PropertyChanged}" 
                  ItemsSource="{Binding Tickets, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False" Margin="100,300,0,0">
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF7ED0FB"/>
            </DataGrid.Resources>
            <DataGrid.Columns>

                <DataGridTextColumn Header="{ns:Loc Username}" Width="260" Binding="{Binding Path=Guest2Username}"/>
                <DataGridTemplateColumn Width="*">
                    <DataGridTemplateColumn.Header>
                        <TextBlock Text="Status"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button x:Name="TicketStatusButton" Content="{ns:Loc Here}" Click="TicketStatusButton_Click" IsEnabled="True"
                                    Background="{Binding Path=ButtonColor , UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>

        </DataGrid>
        <ContentControl x:Name="ContentArea"></ContentControl>
    </Grid>
</UserControl>
