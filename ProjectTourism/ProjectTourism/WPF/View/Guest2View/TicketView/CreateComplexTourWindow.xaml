<Window x:Class="ProjectTourism.WPF.View.Guest2View.TicketView.CreateComplexTourWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ProjectTourism.WPF.View.Guest2View.TicketView"
        mc:Ignorable="d"
        Title="Create Complex Tour" 
        WindowStartupLocation="CenterScreen" 
        Height="600" Width="720"
        Background="LightBlue"
        WindowStyle="None">

    <Window.Resources>
        <ControlTemplate x:Key="ValidationTemplate">
            <StackPanel>
                <AdornedElementPlaceholder x:Name="textBox" />
                <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red" />
            </StackPanel>
        </ControlTemplate>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="200"/>
            <RowDefinition Height="320"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Label Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center"
               FontFamily="/Fonts/#Rubik" FontSize="20" 
               Content="Complex Tour Request"/>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="130"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <DataGrid x:Name="DataGridComplexTourParts" 
                      ItemsSource="{Binding TourRequests, UpdateSourceTrigger=PropertyChanged}"
                      SelectedItem="{Binding Path=SelectedTourRequest, UpdateSourceTrigger=PropertyChanged}" 
                      RowHeight="60" Grid.Row="0"
                      Height="120" Width="auto" Margin="20 5 20 5"
                      VerticalAlignment="Top" HorizontalAlignment="Left"
                      SelectionMode="Single" AutoGenerateColumns="False" IsReadOnly="True"
                      VerticalScrollBarVisibility="Visible"
                      Background="LightBlue" RowBackground="LightBlue"
                      BorderThickness="1" BorderBrush="Black" >
                <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" 
                                     Color="#339AF0"/>
                </DataGrid.Resources>

                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Guest's &#x0d;username"
                                            Width="80" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Label FontFamily="/Fonts/#Rubik" FontSize="14"
                                               VerticalAlignment="Center" HorizontalAlignment="Center"
                                               Content="{Binding Path=Guest2Username}"
                                               />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Made On"
                                            Width="150">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Label FontFamily="/Fonts/#Rubik" FontSize="14"
                                       VerticalAlignment="Center" HorizontalAlignment="Center"
                                       Content="{Binding Path=CreationDateTime}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Date &#x0d;Range"
                                            Width="100" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Label FontFamily="/Fonts/#Rubik" FontSize="14"
                                       VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <Label.Content>
                                        <TextBlock>
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="{}{0} -&#x0d;{1}">
                                                    <Binding Path="StartDate"/>
                                                    <Binding Path="EndDate"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </Label.Content>
                                </Label>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Language"
                                            Width="80">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Label FontFamily="/Fonts/#Rubik" FontSize="14"
                                       VerticalAlignment="Center" HorizontalAlignment="Center"
                                       Content="{Binding Path=Language}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Location"
                                            Width="100">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Label FontFamily="/Fonts/#Rubik" FontSize="14"
                                       VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <Label.Content>
                                        <TextBlock>
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="{}{0}, &#x0d;{1}">
                                                    <Binding Path="Location.Country"/>
                                                    <Binding Path="Location.City"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </Label.Content>
                                </Label>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Number of&#x0d; Guests"
                                            Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Label FontFamily="/Fonts/#Rubik" FontSize="14"
                                       VerticalAlignment="Center" HorizontalAlignment="Center"
                                       Content="{Binding Path=NumberOfGuests}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>

            <Button x:Name="CancelButton" 
                    Grid.Row="1"
                    Content="Cancel" 
                    IsDefault="True" Click="CancelClick"  >
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Height" Value="50"/>
                        <Setter Property="Width" Value="150"/>
                        <Setter Property="Margin" Value="0 0 20 20"/>
                        <Setter Property="HorizontalAlignment" Value="Right"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="BorderThickness" Value="1"/>

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border"
                                            BorderThickness="1"
                                            Background="Black">
                                        <TextBlock Text="Cancel"
                                            FontFamily="/Fonts/#Rubik" 
                                            FontSize="18"
                                            Foreground="#DBDBDB" 
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver"
                                                 Value="True"   >
                                            <Setter Property="Background"
                                                    TargetName="border"
                                                    Value="#272B2F" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True" />
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
            
            <!-- MAKE A COMPLEX TOUR -->
            <!--Style="{StaticResource button}"  -->
            <Button x:Name="MakeComplexTour" 
                    Command="{Binding MakeComplexTourCommand}"
                    Grid.Row="1">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Height" Value="50"/>
                        <Setter Property="Width" Value="150"/>
                        <Setter Property="Margin" Value="170 0 20 20"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="BorderThickness" Value="1"/>

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border"
                                            BorderThickness="1"
                                            Background="Black">
                                        <TextBlock Text="Make a &#x0d;Complex Tour"
                                                   FontFamily="/Fonts/#Rubik" 
                                                   FontSize="18" TextAlignment="Center"
                                                   Foreground="#DBDBDB" 
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver"
                                                 Value="True"   >
                                            <Setter Property="Background"
                                                    TargetName="border"
                                                    Value="#272B2F" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True" />
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>

        <Grid Grid.Row="2" 
              Background="Black" Margin="20 0 20 0" >
            <Grid.RowDefinitions>
                <RowDefinition Height="55"/>
                <RowDefinition Height="55"/>
                <RowDefinition Height="55"/>
                <RowDefinition Height="80"/>
                <RowDefinition Height="55"/>
                <RowDefinition Height="*"/>
                
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="250"/>
                <ColumnDefinition Width="250"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Label Content="Coutry: " 
                   FontFamily="/Fonts/#Rubik"
                   Foreground="#DBDBDB"
                   FontSize="16"
                   VerticalAlignment="Top" HorizontalAlignment="Left"
                   Grid.Column="1" Grid.Row="0"
                   />
            
            <!--Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
            Text="{Binding Path=NewTourRequestPart.Location.Country, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" -->
            <TextBox x:Name="CountryText"
                     Text="{Binding Path=NewTourRequestPart.Location.Country, UpdateSourceTrigger=PropertyChanged}" 
                     
                     Width="200" Height="25"
                     FontFamily="/Fonts/#Rubik"
                     FontSize="16"
                     VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="0 0 0 5"
                     Grid.Column="1" Grid.Row="0"
                     />

            <Label Content="City: " 
                   FontFamily="/Fonts/#Rubik"
                   Foreground="#DBDBDB"
                   FontSize="16"
                   VerticalAlignment="Top" HorizontalAlignment="Left"
                   Grid.Column="2" Grid.Row="0"
                   />
            <!--Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
            Text="{Binding Path=NewTourRequestPart.Location.City, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" -->
            <TextBox x:Name="CityText"
                     Text="{Binding Path=NewTourRequestPart.Location.City, UpdateSourceTrigger=PropertyChanged}" 
                     
                     Width="200" Height="25"
                     FontFamily="/Fonts/#Rubik"
                     FontSize="16"
                     VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="0 0 0 5"
                     Grid.Column="2" Grid.Row="0"
                     />

            <Label Content="Language: " 
                   FontFamily="/Fonts/#Rubik"
                   Foreground="#DBDBDB"
                   FontSize="16"
                   VerticalAlignment="Top" HorizontalAlignment="Left"
                   Grid.Column="1" Grid.Row="1"
                   />
            <!--Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
            Text="{Binding Path=NewTourRequestPart.Language, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" -->
            <ComboBox x:Name="LanguageComboBox" 
                      Text="{Binding Path=NewTourRequestPart.Language, UpdateSourceTrigger=PropertyChanged}" 
                      
                      ItemsSource="{Binding Path=LanguageList}"
                      Width="200" Height="25"
                      FontFamily="/Fonts/#Rubik"
                      FontSize="16"
                      VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="0 0 0 5"
                      Grid.Column="1" Grid.Row="1"
                      />

            <Label Content="Chose new language: " Height="auto" 
                   FontFamily="/Fonts/#Rubik"
                   Foreground="#DBDBDB"
                   FontSize="14"
                   VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0 0 0 0"
                   Grid.Column="2" Grid.Row="1"
                   />
            <!--Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
            Text="{Binding Path=NewTourRequestPart.Language, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" -->
            <TextBox x:Name="LanguageText"
                     Text="{Binding Path=NewTourRequestPart.Language, UpdateSourceTrigger=PropertyChanged}" 
                     
                     Width="200" Height="25"
                     FontFamily="/Fonts/#Rubik"
                     FontSize="16"
                     VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="0 0 0 5"
                     Grid.Column="2" Grid.Row="1"
                     />

            <Label Content="Max Number of Guests: " 
                   FontFamily="/Fonts/#Rubik"
                   Foreground="#DBDBDB"
                   FontSize="16"
                   VerticalAlignment="Top" HorizontalAlignment="Left"
                   Grid.Column="1" Grid.Row="2"
                   />
            <!--Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
            Text="{Binding Path=NewTourRequestPart.NumberOfGuests, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" -->
            <TextBox x:Name="NumberOfGuestsText"
                     Text="{Binding Path=NewTourRequestPart.NumberOfGuests, UpdateSourceTrigger=PropertyChanged}" 
                     
                     Width="200" Height="25"
                     FontFamily="/Fonts/#Rubik"
                     FontSize="16"
                     VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="0 0 0 5"
                     Grid.Column="1" Grid.Row="2"
                     />

            <Label Content="Description: " 
                   FontFamily="/Fonts/#Rubik"
                   Foreground="#DBDBDB"
                   FontSize="16"
                   VerticalAlignment="Top" HorizontalAlignment="Left"
                   Grid.Column="1" Grid.Row="3"
                   />
            <!--Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
            Text="{Binding Path=NewTourRequestPart.Description, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" -->
            <TextBox x:Name="DescriptionText"
                     Text="{Binding Path=NewTourRequestPart.Description, UpdateSourceTrigger=PropertyChanged}" 
                     
                     Width="450" Height="50" TextWrapping="Wrap"
                     FontFamily="/Fonts/#Rubik"
                     FontSize="16"
                     VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="0 0 0 5"
                     Grid.Column="1" Grid.Row="3" Grid.ColumnSpan="2"
                     />

            <Label Content="Start Date: " 
                   FontFamily="/Fonts/#Rubik"
                   Foreground="#DBDBDB"
                   FontSize="16"
                   VerticalAlignment="Top" HorizontalAlignment="Left"
                   Grid.Column="1" Grid.Row="4"
                   />
            <!--SelectedDate="{Binding Path=NewTourRequestPart.StartDate, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" -->
            <!--Validation.ErrorTemplate="{StaticResource ValidationTemplate}"-->
            <DatePicker x:Name="StartDatePicker" IsTodayHighlighted="True"
                        SelectedDateChanged="StartDateChanged"
                        
                        Width="200" Height="25"
                        FontFamily="/Fonts/#Rubik"
                        FontSize="16"
                        VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="0 0 0 5"
                        Grid.Column="1" Grid.Row="4"    >
                <DatePicker.BlackoutDates>
                    <CalendarDateRange End="01/01/1900 23:59:59" Start="01/01/0001 23:59:59"/>
                </DatePicker.BlackoutDates>
            </DatePicker>

            <Label Content="End Date: " 
                   FontFamily="/Fonts/#Rubik"
                   Foreground="#DBDBDB"
                   FontSize="16"
                   VerticalAlignment="Top" HorizontalAlignment="Left"
                   Grid.Column="2" Grid.Row="4"     />
            <!-- SelectedDate="{Binding Path=NewTourRequestPart.EndDate, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" -->
            <!--Validation.ErrorTemplate="{StaticResource ValidationTemplate}"-->
            <DatePicker x:Name="EndDatePicker" IsTodayHighlighted="True"
                        SelectedDateChanged="EndDateChanged"
                        
                        Width="200" Height="25"
                        FontFamily="/Fonts/#Rubik"
                        FontSize="16"
                        VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="0 0 0 5"
                        Grid.Column="2" Grid.Row="4"    >
                <DatePicker.BlackoutDates>
                    <CalendarDateRange End="01/01/1900 23:59:59" Start="01/01/0001 23:59:59"/>
                </DatePicker.BlackoutDates>
            </DatePicker>

            <Grid Grid.Row="4" Grid.Column="3">
                <Button x:Name="AddRequestButton" 
                        Command="{Binding AddTourRequestCommand}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Height" Value="50"/>
                            <Setter Property="Width" Value="50"/>
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="BorderThickness" Value="1"/>

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border x:Name="border"
                                                BorderThickness="2" BorderBrush="#DBDBDB"
                                                Background="Black">
                                            <TextBlock Text="+"
                                                       FontFamily="/Fonts/#Rubik" 
                                                       FontSize="25" Foreground="#DBDBDB" 
                                                       HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            <Border.Resources>
                                                <Style TargetType="Border">
                                                    <Setter Property="CornerRadius" Value="25"/>
                                                </Style>
                                            </Border.Resources>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver"
                                                 Value="True"   >
                                                <Setter Property="Background"
                                                    TargetName="border"
                                                    Value="#272B2F" />
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True" />
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </Grid>

    </Grid>
</Window>
