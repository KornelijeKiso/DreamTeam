<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddANewTour" xml:space="preserve">
    <value>Add a new tour</value>
  </data>
  <data name="AddLanguage" xml:space="preserve">
    <value>Add language</value>
  </data>
  <data name="AddTime" xml:space="preserve">
    <value>Add time</value>
  </data>
  <data name="AgeGroupsDescription" xml:space="preserve">
    <value>Here you can see the age groups of people</value>
  </data>
  <data name="AllAppointments" xml:space="preserve">
    <value>All appointments</value>
  </data>
  <data name="AllApps" xml:space="preserve">
    <value>All appointments</value>
  </data>
  <data name="AllTours" xml:space="preserve">
    <value>All tours</value>
  </data>
  <data name="AllToursLabel" xml:space="preserve">
    <value>All tours</value>
  </data>
  <data name="Biography" xml:space="preserve">
    <value>Biography</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CancelAppQuestion" xml:space="preserve">
    <value>Are you sure you want to cancel this appointment?</value>
  </data>
  <data name="Canceled" xml:space="preserve">
    <value>Canceled</value>
  </data>
  <data name="CheckpointArrival" xml:space="preserve">
    <value>Checkpoint arrival</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="CityRequired" xml:space="preserve">
    <value>City is required!</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="ComplexTours" xml:space="preserve">
    <value>Complex tours</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="CountryRequired" xml:space="preserve">
    <value>Country required!</value>
  </data>
  <data name="CreateCustomTour" xml:space="preserve">
    <value>Create custom tour</value>
  </data>
  <data name="CreateTour" xml:space="preserve">
    <value>Create tour</value>
  </data>
  <data name="CurrentTourStop" xml:space="preserve">
    <value>Current tour stop</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DeleteApp" xml:space="preserve">
    <value>Delete appointment</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="EmergencyStop" xml:space="preserve">
    <value>Emergency stop</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>End date</value>
  </data>
  <data name="EnterALanguage" xml:space="preserve">
    <value>Enter a language of the route:</value>
  </data>
  <data name="EnterFinish" xml:space="preserve">
    <value>Enter finish point</value>
  </data>
  <data name="EnterNameLabel" xml:space="preserve">
    <value>Enter name</value>
  </data>
  <data name="EnterPositiveNumber" xml:space="preserve">
    <value>Enter positive number</value>
  </data>
  <data name="EnterStart" xml:space="preserve">
    <value>Enter start point</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Expired" xml:space="preserve">
    <value>Expired</value>
  </data>
  <data name="Finish" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="Finished" xml:space="preserve">
    <value>Finished</value>
  </data>
  <data name="FinishRequired" xml:space="preserve">
    <value>Finish point is required!</value>
  </data>
  <data name="Guest" xml:space="preserve">
    <value>Guest</value>
  </data>
  <data name="GuestsRequest" xml:space="preserve">
    <value>Request made by  </value>
  </data>
  <data name="GuestUsername" xml:space="preserve">
    <value>Guest username</value>
  </data>
  <data name="GuideAlreadyBusy" xml:space="preserve">
    <value>Guide is already busy in selected appointment!</value>
  </data>
  <data name="GuideAlreadyStartedTourError" xml:space="preserve">
    <value>Guide has already started a tour!</value>
  </data>
  <data name="GuidesKnowledge" xml:space="preserve">
    <value>Guide's knowledge</value>
  </data>
  <data name="GuidesLanguage" xml:space="preserve">
    <value>Guides language</value>
  </data>
  <data name="Here" xml:space="preserve">
    <value>Here</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="HomeLabel" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Hours" xml:space="preserve">
    <value>Hours: </value>
  </data>
  <data name="Images" xml:space="preserve">
    <value>Images</value>
  </data>
  <data name="Interesting" xml:space="preserve">
    <value>Interesting</value>
  </data>
  <data name="InvalidTime" xml:space="preserve">
    <value>Invalid time entered.</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LearnMore" xml:space="preserve">
    <value>Shortcuts</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="MaxNumberOfGuests" xml:space="preserve">
    <value>Max number of guests</value>
  </data>
  <data name="Minutes" xml:space="preserve">
    <value>Minutes:</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NoDatesError" xml:space="preserve">
    <value>You did not choose any dates for this tour!</value>
  </data>
  <data name="NoGoodFieldsError" xml:space="preserve">
    <value>Tour can not be made because the fields were not entered correctly.</value>
  </data>
  <data name="NoReviewsError" xml:space="preserve">
    <value>There are no reviews for this appointment!</value>
  </data>
  <data name="NoTicketsLabel" xml:space="preserve">
    <value>There were no tickets or vouchers for this appointment</value>
  </data>
  <data name="NoTodaysApps" xml:space="preserve">
    <value>There are no active today's appointments</value>
  </data>
  <data name="NumberMustBePositive" xml:space="preserve">
    <value>The number must be positive!</value>
  </data>
  <data name="NumberOfGuests" xml:space="preserve">
    <value>Number of guests</value>
  </data>
  <data name="NumberOfRequests" xml:space="preserve">
    <value>Number of requests</value>
  </data>
  <data name="NumberOfTickets" xml:space="preserve">
    <value>Number of tickets</value>
  </data>
  <data name="NumberOfVouchers" xml:space="preserve">
    <value>Number of vouchers</value>
  </data>
  <data name="PDF1" xml:space="preserve">
    <value>'s guests report</value>
  </data>
  <data name="PDF2" xml:space="preserve">
    <value>Time: </value>
  </data>
  <data name="PDF3" xml:space="preserve">
    <value>Jezik: </value>
  </data>
  <data name="PDF4" xml:space="preserve">
    <value>Tour stops: </value>
  </data>
  <data name="PDFLocation" xml:space="preserve">
    <value>Your report is generated in folder</value>
  </data>
  <data name="PDFLocation2" xml:space="preserve">
    <value>under the name: Tour_appointment_report_</value>
  </data>
  <data name="PDFName" xml:space="preserve">
    <value>../../../PDF/GuidePDFs/Tour_appointment_report_</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="Pictures" xml:space="preserve">
    <value>Pictures</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Ready" xml:space="preserve">
    <value>Ready</value>
  </data>
  <data name="Report" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="ReportReview" xml:space="preserve">
    <value>Report review</value>
  </data>
  <data name="ReportReviewQuestion" xml:space="preserve">
    <value>Are you sure you want to report a review by </value>
  </data>
  <data name="RequestInfo" xml:space="preserve">
    <value>Request info</value>
  </data>
  <data name="Requests" xml:space="preserve">
    <value>Requests</value>
  </data>
  <data name="RequestStatistics" xml:space="preserve">
    <value>Request statistics</value>
  </data>
  <data name="RequiredNameLabel" xml:space="preserve">
    <value>Name is required!</value>
  </data>
  <data name="ReviewHasBeenReported" xml:space="preserve">
    <value> has been successfuly reported!</value>
  </data>
  <data name="ReviewReported" xml:space="preserve">
    <value>Review made by </value>
  </data>
  <data name="Reviews" xml:space="preserve">
    <value>Reviews</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchParameters" xml:space="preserve">
    <value>Search parameters</value>
  </data>
  <data name="SeeReviews" xml:space="preserve">
    <value>See reviews</value>
  </data>
  <data name="SelectAYear" xml:space="preserve">
    <value>Select a year of which you would like to see monthly report</value>
  </data>
  <data name="Shortcuts" xml:space="preserve">
    <value>Shortcuts</value>
  </data>
  <data name="SpokenLanguages" xml:space="preserve">
    <value>Spoken languages</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Start date</value>
  </data>
  <data name="StartPointRequired" xml:space="preserve">
    <value>Start point required!</value>
  </data>
  <data name="StartTour" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="StatisticsLabel1" xml:space="preserve">
    <value>Select a tour of which you would like to see the statistics.</value>
  </data>
  <data name="Stopped" xml:space="preserve">
    <value>Stopped</value>
  </data>
  <data name="Stops" xml:space="preserve">
    <value>Stops</value>
  </data>
  <data name="SucecssfulDeletation" xml:space="preserve">
    <value>has been succesfully deleted!</value>
  </data>
  <data name="Suggested" xml:space="preserve">
    <value>Suggested by: </value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="TodaysAppointments" xml:space="preserve">
    <value>Today's appointments</value>
  </data>
  <data name="TourAdded" xml:space="preserve">
    <value>Your tour has been successfuly added!</value>
  </data>
  <data name="TourInfo" xml:space="preserve">
    <value>Tour info</value>
  </data>
  <data name="TourLocation" xml:space="preserve">
    <value>Tour location: </value>
  </data>
  <data name="TourState" xml:space="preserve">
    <value>Tour state</value>
  </data>
  <data name="TourStatistic" xml:space="preserve">
    <value>Appointment statistics</value>
  </data>
  <data name="TourStatistics" xml:space="preserve">
    <value>Tour statistics</value>
  </data>
  <data name="TourStop" xml:space="preserve">
    <value>Tour stop</value>
  </data>
  <data name="TourSuggestion" xml:space="preserve">
    <value>Tour suggestion</value>
  </data>
  <data name="UpcomingLabel" xml:space="preserve">
    <value>Upcoming...</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="Visits" xml:space="preserve">
    <value>Visits</value>
  </data>
  <data name="WatermarkStops" xml:space="preserve">
    <value>Enter comma separated stops</value>
  </data>
  <data name="WatermarkURLs" xml:space="preserve">
    <value>Enter comma separated URLs</value>
  </data>
  <data name="WelcomeLabel" xml:space="preserve">
    <value>Welcome!</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Year</value>
  </data>
</root>